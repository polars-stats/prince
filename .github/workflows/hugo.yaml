# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.108.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded

      - name: actions/checkout@v3
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install environment
        uses: ./.github/actions/install

      - name: Execute notebooks
        run: python3 -m jupyter nbconvert --execute --to notebook --inplace docs/content/*.ipynb

      - name: Convert notebooks
        run: python3 -m jupyter nbconvert --to markdown docs/content/*.ipynb

      - name: Clean MarkDown
        run: (for f in docs/content/*.md; do sed -e '/<script/,/<\/script>/{/^$/d;}' ${f} > ${f}.tmp; mv ${f}.tmp ${f}; done)

      - name: actions/configure-pages@v3
        id: pages
        uses: actions/configure-pages@v3

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd docs && hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: actions/upload-pages-artifact@v2
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./docs/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: actions/deploy-pages
        id: deployment
        uses: actions/deploy-pages@v2
